---
title: "Final Presentation"
format: revealjs
---

```{r}
library(tidyverse)
library(shinyWidgets)
library(scales)
library(shiny)
library(rvest)
library(plotly)
library(tigris)
library(mapview)
library(sf)
library(usmap)

```

```{r}
states_df <- 
  tibble(state = state.name) %>%
  bind_cols(tibble(abb = state.abb)) %>% 
  bind_rows(tibble(state = "District of Columbia", abb = "DC"))

intrade08 <- read_csv("https://raw.githubusercontent.com/kosukeimai/qss/master/PREDICTION/intrade08.csv") %>%
  select(2:7) %>%
  mutate(PriceD = ifelse(is.na(PriceD), 0, PriceD),
         PriceR = ifelse(is.na(PriceR), 0, PriceR)) %>%
  mutate(statename = as.factor(statename),
         democrat_candidate = "Barack Obama",
         republican_candidate = "John McCain",
         pred_winner = case_when(
           PriceD > PriceR ~ "democrat",
           PriceR > PriceD ~ "republican",
           .default = "Tie"
         )
  ) %>%
  rename(#"state" = "statename",
    "democrat" = "PriceD",
    "republican" = "PriceR") %>%
  filter(day <= as.Date("2008-11-06"))

intrade12 <- read_csv("https://raw.githubusercontent.com/kosukeimai/qss/master/PREDICTION/intrade12.csv") %>%
  select(2:7) %>%
  mutate(PriceD = ifelse(is.na(PriceD), 0, PriceD),
         PriceR = ifelse(is.na(PriceR), 0, PriceR)) %>%
  mutate(statename = as.factor(statename),
         democrat_candidate = "Barack Obama",
         republican_candidate = "Mitt Romney",
         pred_winner = case_when(
           PriceD > PriceR ~ "democrat",
           PriceR > PriceD ~ "republican",
           .default = "Tie"
         )
  )%>%
  rename(#"state" = "statename",
    "democrat" = "PriceD",
    "republican" = "PriceR") %>%
  filter(day <= as.Date("2012-11-08"))

polls08 <- read_csv("https://raw.githubusercontent.com/kosukeimai/qss/master/PREDICTION/polls08.csv") %>%
  rename("statename" = "state") %>%
  mutate(statename = as.factor(statename), 
         democrat_candidate = "Barack Obama") %>%
  left_join(states_df, by = c("statename" = "abb")) %>%
  rename("democrat" = "Obama",
         "republican" = "McCain",
         "date" = "middate") %>%
  mutate(pred_winner = case_when(
    democrat > republican ~ "democrat",
    republican > democrat ~ "republican",
    .default = "Tie"
  )) %>%
  select(-statename) %>%
  select(state, everything())

polls12 <- read_csv("https://raw.githubusercontent.com/kosukeimai/qss/master/PREDICTION/polls12.csv") %>%
  select(2:6) %>%
  rename("statename" = "state") %>%
  mutate(statename = as.factor(statename), 
         democrat_candidate = "Barack Obama",
         republican_candidate = "Mitt Romney") %>%
  left_join(states_df, by = c("statename" = "abb")) %>%
  rename("democrat" = "Obama",
         "republican" = "Romney",
         "date" = "middate") %>%
  mutate(pred_winner = case_when(
    democrat > republican ~ "democrat",
    republican > democrat ~ "republican",
    .default = "Tie"
  )) %>%
  select(-statename) %>%
  select(state, everything())


```


```{r}
## '08 election
`2008_results_scrape` <- read_html("https://en.wikipedia.org/wiki/2008_United_States_presidential_election")

`2008_election_tables` <- `2008_results_scrape` %>% html_nodes("table.wikitable")

`2008_results_table` <- `2008_election_tables`[[10]]

`2008_results_df` <- 
  `2008_results_table` %>% 
  html_table(header = T) 

new_names <- c("Column1", "Column2", 
               "Barack_Obama_Democratic", 
               "Barack_Obama_Democratic",
               "Barack_Obama_Democratic", 
               "John_McCain_Republican", 
               "John_McCain_Republican",
               "John_McCain_Republican", 
               "Ralph_Nader_Independent", 
               "Ralph_Nader_Independent",
               "Ralph_Nader_Independent", 
               "Bob_Barr_Libertarian", 
               "Bob_Barr_Libertarian",
               "Bob_Barr_Libertarian", 
               "Chuck_Baldwin_Constitution", 
               "Chuck_Baldwin_Constitution",
               "Chuck_Baldwin_Constitution", 
               "Cynthia_McKinney_Green", 
               "Cynthia_McKinney_Green",
               "Cynthia_McKinney_Green", 
               "Others","Others","Others", 
               "Margin", "Margin",
               "Total_votes", "Total_votes")


# Rename the nameless columns
names(`2008_results_df`)[names(`2008_results_df`) == ""] <- new_names

results_2008_df <-
  `2008_results_df` %>%
  select(1,4,7, 26) %>%
  rename("state" = "Column1",
         "democrat" = "Barack ObamaDemocratic",
         "republican" = "John McCainRepublican",
         "votes" = "Total votes") %>%
  slice(-1) %>%
  mutate(votes = as.numeric(str_replace_all(votes, ",", "")),
         democrat = as.numeric(str_replace_all(democrat, "%", "")),
         republican = as.numeric(str_replace_all(republican, "%", "")),
         state = as.factor(state)) %>%
  mutate(state = case_when(
    state == "Nebraska†" ~ "Nebraska",
    state == "Maine†" ~ "Maine",
    .default = state
  ),
  winner = case_when(
    democrat > republican ~ "democrat",
    democrat < republican ~ "republican",
    .default = "tie")
  )



## '12 Election
`2012_results_scrape` <- read_html("https://en.wikipedia.org/wiki/2012_United_States_presidential_election")

`2012_election_tables` <- `2012_results_scrape` %>% html_nodes("table.wikitable")

`2012_results_table` <- `2012_election_tables`[[8]]

`2012_results_df` <- 
  `2012_results_table` %>% 
  html_table(header = T) %>%
  select(1,3,6,19)

new_names <- c("state", "democrat", 
               "republican", "votes")

# Rename the nameless columns
names(`2012_results_df`)[names(`2012_results_df`) == ""] <- new_names

results_2012_df <-
  `2012_results_df` %>%
  rename("state" = "State/District",
         "democrat" = "Barack ObamaDemocratic",
         "republican" = "Mitt RomneyRepublican",
         "votes" = "Total") %>%
  slice(-1) %>%
  mutate(votes = as.numeric(str_replace_all(votes, ",", "")),
         democrat = as.numeric(str_replace_all(democrat, "%", "")),
         republican = as.numeric(str_replace_all(republican, "%", "")),
         state = as.factor(state)) %>%
  filter(state != "ME-1Tooltip Maine's 1st congressional district" &
           state != "ME-2Tooltip Maine's 2nd congressional district" &
           state != "NE-1Tooltip Nebraska's 1st congressional district") %>%
  mutate(state = case_when(
    state == "Nebraska†" ~ "Nebraska",
    state == "Maine†" ~ "Maine",
    state == "District of ColumbiaDistrict of Columbia" ~ "District of Columbia",
    state == "New Jersey[121]" ~ "New Jersey",
    state == "New York[122]" ~ "New York",
    state == "Ohio[123]" ~ "Ohio",
    state == "Wisconsin[124]" ~ "Wisconsin",
    .default = state
  ),
  winner = case_when(
    democrat > republican ~ "democrat",
    democrat < republican ~ "republican",
    .default = "tie")
  )



```

```{r}
intrade_combined <- bind_rows(
  mutate(intrade08, year = 2008),
  mutate(intrade12, year = 2012)
) %>%
  rename("date" = "day",
         "state" = "statename")

intrade_combined_election_eve_08 <-
  intrade_combined %>%
  filter((year == 2008 & date <= "2008-11-03") #|
  #(year == 2012 & date == "2012-11-05")
  ) %>%
  #filter(!is.na(democrat) & !is.na(republican)) %>%
  group_by(state) %>%
  slice_max(date) %>%
  left_join(results_2008_df %>% select(state, winner), by = "state") %>%
  rename("actual_winner"="winner") %>%
  mutate(color = ifelse(actual_winner == pred_winner, "#00BA38", "#F8766D"))

intrade_combined_election_eve_12 <-
  intrade_combined %>%
  filter((year == 2012 & date <= "2012-11-05") #|
  #(year == 2012 & date == "2012-11-05")
  ) %>%
  #filter(!is.na(democrat) & !is.na(republican)) %>%
  group_by(state) %>%
  slice_max(date) %>%
  left_join(results_2012_df %>% select(state, winner), by = "state") %>%
  rename("actual_winner"="winner") %>%
  mutate(color = ifelse(actual_winner == pred_winner, "#00BA38", "#F8766D"))


```

```{r}
polls_combined <- bind_rows(
  mutate(polls08, year = 2008),
  mutate(polls12, year = 2012)
) %>%
  mutate(scale = 100,
         state = as.factor(state))


# polls_combined %>%
#   filter((year == 2008 & date <= "2008-11-03")) %>%
#   group_by(date) %>%
#   summarise(democrat_avg = mean(democrat),
#             republican_avg = mean(republican)) %>%
#   ungroup() %>% 
#   ggplot(aes(x = date,
#              y = democrat_avg)) +
#   geom_line(aes(x = date, y = democrat_avg), colour = "blue") +
#   geom_hline(yintercept = 50, colour = "black") +
#   geom_line(aes(x = date, y = republican_avg), colour = "red") +
#   geom_vline(xintercept = as.numeric("2008-09-15")) +
#   scale_y_continuous(limits = c(0,100)) +
#   theme_minimal()


polls_combined_election_eve_08 <-
  polls_combined %>%
  filter((year == 2008 & date <= "2008-11-03")) %>%
  group_by(state, date, year) %>%
  summarise(democrat_avg = mean(democrat),
            republican_avg = mean(republican)) %>%
  ungroup() %>%
  group_by(state) %>%
  slice_max(date) %>%
  mutate(pred_winner = case_when(
    democrat_avg > republican_avg ~ "democrat",
    republican_avg > democrat_avg ~ "republican",
    .default = "Tie"
  )) %>%
  left_join(results_2008_df %>% select(state, winner), by = "state") %>%
  rename("actual_winner"="winner") %>%
  mutate(color = ifelse(actual_winner == pred_winner, "#00BA38", "#F8766D"))

polls_combined_election_eve_12 <-
  polls_combined %>%
  filter((year == 2012 & date <= "2012-11-05")) %>%
  group_by(state, date, year) %>%
  summarise(democrat_avg = mean(democrat),
            republican_avg = mean(republican)) %>%
  ungroup() %>%
  group_by(state) %>%
  slice_max(date) %>%
  mutate(pred_winner = case_when(
    democrat_avg > republican_avg ~ "democrat",
    republican_avg > democrat_avg ~ "republican",
    .default = "Tie"
  )) %>%
  left_join(results_2012_df %>% select(state, winner), by = "state") %>%
  rename("actual_winner"="winner") %>%
  mutate(color = ifelse(actual_winner == pred_winner, "#00BA38", "#F8766D"))
```


```{r}
# Intrade 2008 election eve classification
us_geo <- tigris::states(cb = TRUE, resolution = '20m')
all_data <- inner_join(us_geo, intrade_combined_election_eve_08, by = c("NAME" = "state")) 
polling_08_all_data <- inner_join(us_geo, polls_combined_election_eve_08, by = c("NAME" = "state")) 

intrade_eve_08_classify_map <- mapview(all_data, zcol = "color", color = "white", col.regions = c("seagreen3", "red"))

polling_eve_08_classify_map <- mapview(polling_08_all_data, zcol = "color", color = "white", col.regions = c("seagreen3", "red"))
```


## Data

3 Data Sets for 2008 and 2012 Elections:

*   Intrade Data (Betting Markets)

*   Presidential Election Polling Data

*   Scraped Election Outcome Data from Wikipedia

## 2008 National Presidential Odds of Winning (All States)
```{r}
probabilities_08 <-
  intrade_combined %>%
  filter((year == 2008 & date <= "2008-11-03")) %>%
  filter(democrat + republican > 30) %>%
  group_by(date) %>%
  summarise(democrat_avg_odds = round(mean(democrat, na.rm = T), digits = 2),
            republican_avg_odds = round(mean(republican, na.rm = T), digits = 2)) %>%
  ungroup() %>%
  ggplot(aes(x = date,
             y = democrat_avg_odds)) +
  geom_line(aes(x = date, y = democrat_avg_odds), colour = "blue") +
  geom_hline(yintercept = 50, colour = "black") +
  geom_line(aes(x = date, y = republican_avg_odds), colour = "red") +
  geom_vline(aes(xintercept = as.numeric(as.Date("2008-01-03")),
                 text = paste0("Obama Wins Iowa Democratic Caucus\n",
                               "Date: 2008-01-03")), 
             colour = "black", linetype = "dashed", alpha = 0.8) +
  geom_vline(aes(xintercept = as.numeric(as.Date("2008-02-05")),
                 text = paste0("2008 Super Tuesday\n",
                               "Date: 2008-02-05")), 
             colour = "black", linetype = "dashed", alpha = 0.8) +
  geom_vline(aes(xintercept = as.numeric(as.Date("2008-09-15")),
                 text = paste0("Lehman Brothers File for Bankruptcy\n",
                               "Date: 2008-09-15")), 
             colour = "black", linetype = "dashed", alpha = 0.8) +
  geom_vline(aes(xintercept = as.numeric(as.Date("2008-09-06")),
                 text = paste0("Fannie Mae and Freddie Mac Seized\n",
                               "Date: 2008-09-06")), 
             colour = "black", linetype = "dashed", alpha = 0.8) +
  geom_vline(aes(xintercept = as.numeric(as.Date("2008-08-29")),
                 text = paste0("McCain Announces Palin as VP\n",
                               "Date: 2008-08-29")), 
             colour = "black", linetype = "dashed", alpha = 0.8) +
  geom_vline(aes(xintercept = as.numeric(as.Date("2008-08-27")),
                 text = paste0("Obama Wins Nomination\nAnnounces Biden as VP\n",
                               "Date: 2008-08-27")), 
             colour = "black", linetype = "dashed", alpha = 0.8) +
  geom_vline(aes(xintercept = as.numeric(as.Date("2012-08-11")),
                 text = paste0("2012 Iowa Caucuses\n",
                               "Date: 2012-08-11")), 
             colour = "black", linetype = "dashed", alpha = 0.8) +
  geom_vline(aes(xintercept = as.numeric(as.Date("2012-03-06")),
                 text = paste0("Super Tuesday 2012\n",
                               "Date: 2012-03-06")), 
             colour = "black", linetype = "dashed", alpha = 0.8) +
  geom_vline(aes(xintercept = as.numeric(as.Date("2012-04-25")),
                 text = paste0("RNC Declares Romney as Republican Nominee\n",
                               "Date: 2012-04-25")), 
             colour = "black", linetype = "dashed", alpha = 0.8) +
  geom_vline(aes(xintercept = as.numeric(as.Date("2012-08-11")),
                 text = paste0("Mitt Romney Announces Paul Ryan as VP\n",
                               "Date: 2012-08-11")), 
             colour = "black", linetype = "dashed", alpha = 0.8) +
  geom_vline(aes(xintercept = as.numeric(as.Date("2012-10-29")),
                 text = paste0("Hurricane Sandy\n",
                               "Date: 2012-10-29")), 
             colour = "black", linetype = "dashed", alpha = 0.8) +
  scale_y_continuous(limits = c(0,100)) +
  labs(x = "Date",
       y = "Average Odds of Winning Presidency") +
  theme_minimal()

plotly::ggplotly(probabilities_08,  tooltip = c("x","y","text"))
```


## 2012 National Presidential Odds of Winning (All States)
```{r}
probabilities_12 <-
  intrade_combined %>%
  #filter((year == 2008 & date <= "2008-11-03")) %>%
  filter((year == 2012 & date <= "2012-11-05")) %>%
  filter(democrat + republican > 30) %>%
  group_by(date) %>%
  summarise(democrat_avg_odds = round(mean(democrat, na.rm = T), digits = 2),
            republican_avg_odds = round(mean(republican, na.rm = T), digits = 2)) %>%
  ungroup() %>%
  ggplot(aes(x = date,
             y = democrat_avg_odds)) +
  geom_line(aes(x = date, y = democrat_avg_odds), colour = "blue") +
  geom_hline(yintercept = 50, colour = "black") +
  geom_line(aes(x = date, y = republican_avg_odds), colour = "red") +
  geom_vline(aes(xintercept = as.numeric(as.Date("2008-01-03")),
                 text = paste0("Obama Wins Iowa Democratic Caucus\n",
                               "Date: 2008-01-03")), 
             colour = "black", linetype = "dashed", alpha = 0.8) +
  geom_vline(aes(xintercept = as.numeric(as.Date("2008-02-05")),
                 text = paste0("2008 Super Tuesday\n",
                               "Date: 2008-02-05")), 
             colour = "black", linetype = "dashed", alpha = 0.8) +
  geom_vline(aes(xintercept = as.numeric(as.Date("2008-09-15")),
                 text = paste0("Lehman Brothers File for Bankruptcy\n",
                               "Date: 2008-09-15")), 
             colour = "black", linetype = "dashed", alpha = 0.8) +
  geom_vline(aes(xintercept = as.numeric(as.Date("2008-09-06")),
                 text = paste0("Fannie Mae and Freddie Mac Seized\n",
                               "Date: 2008-09-06")), 
             colour = "black", linetype = "dashed", alpha = 0.8) +
  geom_vline(aes(xintercept = as.numeric(as.Date("2008-08-29")),
                 text = paste0("McCain Announces Palin as VP\n",
                               "Date: 2008-08-29")), 
             colour = "black", linetype = "dashed", alpha = 0.8) +
  geom_vline(aes(xintercept = as.numeric(as.Date("2008-08-27")),
                 text = paste0("Obama Wins Nomination\nAnnounces Biden as VP\n",
                               "Date: 2008-08-27")), 
             colour = "black", linetype = "dashed", alpha = 0.8) +
  geom_vline(aes(xintercept = as.numeric(as.Date("2012-08-11")),
                 text = paste0("2012 Iowa Caucuses\n",
                               "Date: 2012-08-11")), 
             colour = "black", linetype = "dashed", alpha = 0.8) +
  geom_vline(aes(xintercept = as.numeric(as.Date("2012-03-06")),
                 text = paste0("Super Tuesday 2012\n",
                               "Date: 2012-03-06")), 
             colour = "black", linetype = "dashed", alpha = 0.8) +
  geom_vline(aes(xintercept = as.numeric(as.Date("2012-04-25")),
                 text = paste0("RNC Declares Romney as Republican Nominee\n",
                               "Date: 2012-04-25")), 
             colour = "black", linetype = "dashed", alpha = 0.8) +
  geom_vline(aes(xintercept = as.numeric(as.Date("2012-08-11")),
                 text = paste0("Mitt Romney Announces Paul Ryan as VP\n",
                               "Date: 2012-08-11")), 
             colour = "black", linetype = "dashed", alpha = 0.8) +
  geom_vline(aes(xintercept = as.numeric(as.Date("2012-10-29")),
                 text = paste0("Hurricane Sandy\n",
                               "Date: 2012-10-29")), 
             colour = "black", linetype = "dashed", alpha = 0.8) +
  scale_y_continuous(limits = c(0,100)) +
  labs(x = "Date",
       y = "Average Odds of Winning Presidency") +
  theme_minimal()

plotly::ggplotly(probabilities_12,  tooltip = c("x","y","text"))
```

#theme_mininal(base_size = 20)
#grid_arange()

## 2008 Betting Classification Success

```{r}
state_df <- ggplot2::map_data("state") %>%
  mutate(region = str_to_title(region))

state_full_08_intrade <-
  state_df %>%
  left_join(intrade_combined_election_eve_08, by = c("region" = "state"))

state_full_08_poll <-
  state_df %>%
  left_join(polls_combined_election_eve_08, by = c("region" = "state"))

intrade_eve_08_classify_map
# p1 <- state_full_08_intrade %>%
#   ggplot(aes(x = long, y = lat, group = group)) +
#   geom_polygon(colour = "black", aes(fill = color)) +
#   coord_map(projection = "albers", lat0 = 39, lat1 = 45) +
#   theme_void() +
#   scale_fill_manual(values = c("seagreen3", "red"))
# 
# ggplotly(p1)



# p3 <- state_full_08_poll %>%
#   ggplot(aes(x = long, y = lat, group = group)) +
#   geom_polygon(colour = "black", aes(fill = color)) +
#   coord_map(projection = "albers", lat0 = 39, lat1 = 45) +
#   theme_void() +
#   scale_fill_manual(values = c("seagreen3", "red"))
# 
# ggplotly(p3)

# state_full_12_intrade <-
#   state_df %>%
#   left_join(intrade_combined_election_eve_12, by = c("region" = "state"))
# 
# state_full_12_polls <-
#   state_df %>%
#   left_join(polls_combined_election_eve_12, by = c("region" = "state"))
# 
# p2 <- state_full_12_intrade %>%
#   ggplot(aes(x = long, y = lat, group = group)) +
#   geom_polygon(colour = "black", aes(fill = color)) +
#   coord_map(projection = "albers", lat0 = 39, lat1 = 45) +
#   theme_void() +
#   scale_fill_manual(values = c("seagreen3", "red"))
# 
# ggplotly(p2)
# 
# 
# p4 <- state_full_12_intrade %>%
#   ggplot(aes(x = long, y = lat, group = group)) +
#   geom_polygon(colour = "black", aes(fill = color)) +
#   coord_map(projection = "albers", lat0 = 39, lat1 = 45) +
#   theme_void() +
#   scale_fill_manual(values = c("seagreen3", "red"))
# 
# ggplotly(p4)

  
# p <- ggplot(data = state_df, aes(x = long, y = lat, group = group)) +
#   geom_polygon(colour = "black", aes(fill = nuclear)) +
#   coord_map(projection = "albers", lat0 = 39, lat1 = 45) +
#   theme_void() +
#   scale_fill_viridis_b()
# 
# ggplotly(p)
```

## 2008 Polling Classification Success

```{r}
polling_eve_08_classify_map
```

