---
title: "Data Pull Try"
author: Ben Sunshine
format: html
editor: visual
editor_options: 
  chunk_output_type: console
---

```{r}
library(tidyverse)
library(shiny)
library(rvest)
```

```{r}
states_df <- 
  tibble(state = state.name) %>%
  bind_cols(tibble(abb = state.abb)) %>% 
  bind_rows(tibble(state = "District of Columbia", abb = "DC"))

intrade08 <- read_csv("https://raw.githubusercontent.com/kosukeimai/qss/master/PREDICTION/intrade08.csv") %>%
  select(2:7) %>%
  mutate(statename = as.factor(statename),
         democrat_candidate = "Barack Obama",
         republican_candidate = "John McCain") %>%
  rename(#"state" = "statename",
    "democrat" = "PriceD",
    "republican" = "PriceR")

intrade12 <- read_csv("https://raw.githubusercontent.com/kosukeimai/qss/master/PREDICTION/intrade12.csv") %>%
  select(2:7) %>%
  mutate(statename = as.factor(statename),
         democrat_candidate = "Barack Obama",
         republican_candidate = "Mitt Romney") %>%
  rename(#"state" = "statename",
    "democrat" = "PriceD",
    "republican" = "PriceR")

polls08 <- read_csv("https://raw.githubusercontent.com/kosukeimai/qss/master/PREDICTION/polls08.csv") %>%
  rename("statename" = "state") %>%
  mutate(statename = as.factor(statename), 
         democrat_candidate = "Barack Obama",
         republican_candidate = "John McCain") %>%
  left_join(states_df, by = c("statename" = "abb")) %>%
  rename("democrat" = "Obama",
         "republican" = "McCain",
         "date" = "middate") %>%
  select(-statename) %>%
  select(state, everything())

polls12 <- read_csv("https://raw.githubusercontent.com/kosukeimai/qss/master/PREDICTION/polls12.csv") %>%
  select(2:6) %>%
  rename("statename" = "state") %>%
  mutate(statename = as.factor(statename), 
         democrat_candidate = "Barack Obama",
         republican_candidate = "Mitt Romney") %>%
  left_join(states_df, by = c("statename" = "abb")) %>%
  rename("democrat" = "Obama",
         "republican" = "Romney",
         "date" = "middate") %>%
  select(-statename) %>%
  select(state, everything())


```

```{r}
## '08 election
`2008_results_scrape` <- read_html("https://en.wikipedia.org/wiki/2008_United_States_presidential_election")

`2008_election_tables` <- `2008_results_scrape` %>% html_nodes("table.wikitable")

`2008_results_table` <- `2008_election_tables`[[10]]

`2008_results_df` <- 
  `2008_results_table` %>% 
  html_table(header = T) 

new_names <- c("Column1", "Column2", 
               "Barack_Obama_Democratic", 
               "Barack_Obama_Democratic",
               "Barack_Obama_Democratic", 
               "John_McCain_Republican", 
               "John_McCain_Republican",
               "John_McCain_Republican", 
               "Ralph_Nader_Independent", 
               "Ralph_Nader_Independent",
               "Ralph_Nader_Independent", 
               "Bob_Barr_Libertarian", 
               "Bob_Barr_Libertarian",
               "Bob_Barr_Libertarian", 
               "Chuck_Baldwin_Constitution", 
               "Chuck_Baldwin_Constitution",
               "Chuck_Baldwin_Constitution", 
               "Cynthia_McKinney_Green", 
               "Cynthia_McKinney_Green",
               "Cynthia_McKinney_Green", 
               "Others","Others","Others", 
               "Margin", "Margin",
               "Total_votes", "Total_votes")


# Rename the nameless columns
names(`2008_results_df`)[names(`2008_results_df`) == ""] <- new_names

`2008_results_df` <-
  `2008_results_df` %>%
  select(1,4,7, 26) %>%
  rename("state" = "Column1",
         "democrat" = "Barack ObamaDemocratic",
         "republican" = "John McCainRepublican",
         "votes" = "Total votes") %>%
  slice(-1) %>%
  mutate(votes = as.numeric(str_replace_all(votes, ",", "")),
         democrat = as.numeric(str_replace_all(democrat, "%", "")),
         republican = as.numeric(str_replace_all(republican, "%", "")),
         state = as.factor(state)) %>%
  mutate(state = case_when(
    state == "Nebraska†" ~ "Nebraska",
    state == "Maine†" ~ "Maine"
  ))



## '12 Election
`2012_results_scrape` <- read_html("https://en.wikipedia.org/wiki/2012_United_States_presidential_election")

`2012_election_tables` <- `2012_results_scrape` %>% html_nodes("table.wikitable")

`2012_results_table` <- `2012_election_tables`[[8]]

`2012_results_df` <- 
  `2012_results_table` %>% 
  html_table(header = T) %>%
  select(1,3,6,19)

new_names <- c("state", "democrat", 
               "republican", "votes")

# Rename the nameless columns
names(`2012_results_df`)[names(`2012_results_df`) == ""] <- new_names

`2012_results_df` <-
  `2012_results_df` %>%
  rename("state" = "State/District",
         "democrat" = "Barack ObamaDemocratic",
         "republican" = "Mitt RomneyRepublican",
         "votes" = "Total") %>%
  slice(-1) %>%
  mutate(votes = as.numeric(str_replace_all(votes, ",", "")),
         democrat = as.numeric(str_replace_all(democrat, "%", "")),
         republican = as.numeric(str_replace_all(republican, "%", "")),
         state = as.factor(state)) %>%
  mutate(state = case_when(
    state == "Nebraska†" ~ "Nebraska",
    state == "Maine†" ~ "Maine",
    state == "District of ColumbiaDistrict of Columbia" ~ "District of Columbia",
    state == "New Jersey[121]" ~ "New Jersey",
    state == "New York[122]" ~ "New York"
  ))



```

```{r}
intrade_combined <- bind_rows(
  mutate(intrade08, year = 2008),
  mutate(intrade12, year = 2012)
) %>%
  rename("date" = "day")

polls_combined <- bind_rows(
  mutate(polls08, year = 2008),
  mutate(polls12, year = 2012)
)


```

```{r}
ui <- fluidPage(
  sidebarLayout(
    sidebarPanel(
      selectInput("data_source", "Select Data Source:",
                  choices = c("Betting Markets" = "intrade", "Polling Data" = "polls")),
      
      dateRangeInput("date_range", "Select Date Range:",
                     start = min(polls_combined$date), end = max(polls_combined$date),
                     min = min(polls_combined$date), max = max(polls_combined$date)),
      
      selectInput("poll_options", "Select Polls:",
                  choices = c("All Polls", unique(polls_combined$Pollster) %>% sort()))
    ),
    
    mainPanel(
      tabsetPanel(
        tabPanel("Data", dataTableOutput("data_check")),
        tabPanel("Plot", plotOutput("plot")),
        tabPanel("Summary", verbatimTextOutput("summary"))
      )
    )
  )
)

server <- function(input, output, session) {
  
  data <- reactive({
    
    
    if(input$data_source == "intrade") {
      data_source <- 
        intrade_combined %>%
        filter(between(date, input$dat_range[1], input$date_range[2]))
    }
    
    else {
      data_source <-
        polls_combined %>%
        filter(Pollster == input$poll_options) %>%
        filter(between(date, input$dat_range[1], input$date_range[2]))
    }
    
    # data_source <- switch(input$data_source,
    #                       "intrade" = intrade_combined,
    #                       "polls" = {
    #                         polls <- polls_combined
    #                         if (input$poll_options != "All Polls") {
    #                           polls <- filter(polls, Pollster == input$poll_options)
    #                         }
    #                         return(polls)
    #                       })
    # 
    # filtered_data <-
    #   data_source %>%
    #   filter(between(date, input$dat_range[1], input$date_range[2]))
    
    return(data_source)
  })
  
  output$data_check <- renderDataTable({
    data()
  })
  
  # output$plot <- renderPlot({
  #   data_source <- data()
  #   ggplot(data_source, aes(x = democrat, y = republican)) +
  #     geom_point() +
  #     geom_abline(intercept = 0, slope = 1, linetype = "dashed", color = "red") +
  #     labs(x = "Democrat", y = "Republican") +
  #     scale_x_continuous(labels = percent_format()) +
  #     scale_y_continuous(labels = percent_format()) +
  #     ggtitle("Comparison of Democrat vs Republican Support") +
  #     theme_minimal()
  # })
  # 
  # output$summary <- renderPrint({
  #   data_source <- data()
  #   summary(data_source$democrat)
  #   summary(data_source$republican)
  # })
}

shinyApp(ui = ui, server = server)

```

```{r}
ds <- "polls"

po <- "YouGov"

data_source <- switch(ds,
                      "intrade" = intrade_combined,
                      "polls" = {
                        polls <- polls_combined
                        if (po != "All Polls") {
                          polls <- filter(polls, Pollster == po)
                        }
                        return(polls)
                      })
```

